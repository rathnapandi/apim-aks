kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-volumeclaim
  namespace: test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    apigw.version: 1.7.0 (767ab4b)
  creationTimestamp: null
  labels:
    app: mysql
  name: mysql
  namespace: test
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: reports
        - name: MYSQL_ROOT_PASSWORD
          value: changeme
        - name: MYSQL_USER
          value: reports
        - name: MYSQL_PASSWORD
          value: changeme
        image: mysql:5.7.25
        args:
          - "--ignore-db-dir"
          - "lost+found"
        imagePullPolicy: IfNotPresent
        name: mysql
        ports:
          - containerPort: 3306
            protocol: TCP
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
        resources: {}
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-volumeclaim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---

apiVersion: v1
kind: Service
metadata:
  annotations:
    apigw.version: 1.7.0 (767ab4b)
  creationTimestamp: null
  labels:
    app: mysql
  name: mysql
  namespace: test
spec:
  clusterIP: None
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    app: mysql
  sessionAffinity: ClientIP
  type: ClusterIP

