apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  labels:
    io.apigw.service: cassandra
  namespace: test
spec:
  serviceName: cassandra
  replicas: 1
  selector:
    matchLabels:
      io.apigw.service: cassandra
  template:
    metadata:
      labels:
        io.apigw.service: cassandra
    spec:
      containers:
      - name: cassandra
        image: cassandra:3.11.11
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "500m"
            memory: 1Gi
          requests:
           cpu: "500m"
           memory: 1Gi
        env:
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "cassandra-0"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_AUTO_BOOTSTRAP
            value: "false"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    apigw.version: 1.7.0 (767ab4b)
  labels:
    io.apigw.service: cassandra
    env: test
  name: cassandra
  namespace: test
spec:
  clusterIP: None
  ports:
    - port: 9042
      targetPort: 9042
      protocol: TCP
  selector:
    io.apigw.service: cassandra
  sessionAffinity: ClientIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    apigw.version: 1.7.0 (767ab4b)
  labels:
    app: anm
    env: test
  name: anm
  namespace: test
spec:
  selector:
    matchLabels:
      app: anm
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: anm
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
        - name: anm
          env:
            - name: METRICS_DB_URL
              value: jdbc:mysql://mysql:3306/Axway?useSSL=false
            - name: METRICS_DB_USERNAME
              value: root
            - name: METRICS_DB_PASS
              value: changeme
          args:
            - /opt/Axway/apigateway/posix/bin/start-emt-nodemanager
          image: docker-registry.demo.axway.com/apim-demo/anm:7.7-202108
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8090
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
---

# Service
apiVersion: v1
kind: Service
metadata:
  annotations:
    apigw.version: 1.7.0 (767ab4b)
  labels:
    app: anm
    env: test
  name: anm
  namespace: test
spec:
  type: LoadBalancer
  ports:
  - port: 8090
    targetPort: 8090
    protocol: TCP
    name: anm
  selector:
    app: anm
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: apimgmt
    env: test
  name: apimgmt
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apimgmt
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: apimgmt
    spec:
      volumes:
      - name: events
        persistentVolumeClaim:
          claimName: apigw-events
      imagePullSecrets:
      - name: regcred
      containers:
      - args:
        - /opt/Axway/apigateway/posix/bin/start-emt-instance
        env:  
        - name: CASS_HOST
          value: cassandra
        - name: EMT_ANM_HOSTS
          value: anm:8090
        - name: EMT_TOPOLOGY_TTL
          value: "10"
        - name: db_url
          value: jdbc:mysql://mysql:3306/Axway
        - name: METRICS_DB_USERNAME
          value: root
        - name: db_axway_password
          value: changeme
        image: docker-registry.demo.axway.com/apim-demo/apim:7.7-202108-2
        volumeMounts: 
        - mountPath: "/opt/Axway/apigateway/events"
          name: events
        imagePullPolicy: IfNotPresent
        name: apimgmt
        ports:
        - containerPort: 8075
          protocol: TCP
        - containerPort: 8065
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      initContainers:
      - name: init-cassandra-int
        image: busybox
        command: ['sh', '-c', 'until nc -w 3 -v cassandra 9042; do echo waiting for cassandra; sleep 60; done;']
      - name: init-anm
        image: busybox
        command: ['sh', '-c', 'until nc -w 3 -v anm 8090; do echo waiting for anm; sleep 2; done;']
      #dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
---
# Service 

apiVersion: v1
kind: Service
metadata:
  labels:
    app: apimgmt
    env: test
  name: apimgmt
  namespace: test
spec:
  type: LoadBalancer
  ports:
    - name: manager
      port: 8075
      targetPort: 8075
      protocol: TCP
    - name: traffic
      port: 8065
      targetPort: 8065
      protocol: TCP
  selector:
    app: apimgmt
---

# persistent volume
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: apigw-events
  namespace: test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
